class Solution {
public:
    int maxDiff(int num) {
        string s = to_string(num);
        string maxNum = s;
        string minNum = s;

        // maximize
        char toReplaceMax = '\0';
        for (char c : s) {
            if (c != '9') {
                toReplaceMax = c;
                break;
            }
        }

        if (toReplaceMax != '\0') {
            for (char &c : maxNum) {
                if (c == toReplaceMax) {
                    c = '9';
                }
            }
        }

        // minimize
        char toReplaceMin = '\0';
        if (s[0] != '1') {
            toReplaceMin = s[0];
            for (char &c : minNum) {
                if (c == toReplaceMin) {
                    c = '1';
                }
            }
        } else {
            // replace first non-0, non-1 digit 
            for (int i = 1; i < s.length(); ++i) {
                if (s[i] != '0' && s[i] != '1') {
                    toReplaceMin = s[i];
                    break;
                }
            }
            if (toReplaceMin != '\0') {
                for (int i = 0; i < minNum.length(); ++i) {
                    if (minNum[i] == toReplaceMin) {
                        minNum[i] = '0';
                    }
                }
            }
        }

        int maxVal = stoi(maxNum);
        int minVal = stoi(minNum);

        return maxVal - minVal;
    }
};
