class Solution {
public:
    bool isValidSudoku(std::vector<std::vector<char>>& board) {
        for (int i = 0; i < 9; ++i) {
            std::set<char> row_set;
            std::set<char> col_set;
            for (int j = 0; j < 9; ++j) {
                if (board[i][j] != '.' && row_set.count(board[i][j])) {
                    return false;
                }
                row_set.insert(board[i][j]);
                
                
                if (board[j][i] != '.' && col_set.count(board[j][i])) {
                    return false;
                }
                col_set.insert(board[j][i]);
            }
        }

        
        for (int i = 0; i < 9; i += 3) {
            for (int j = 0; j < 9; j += 3) {
                std::set<char> subgrid_set;
                for (int x = 0; x < 3; ++x) {
                    for (int y = 0; y < 3; ++y) {
                        char val = board[i + x][j + y];
                        if (val != '.' && subgrid_set.count(val)) {
                            return false;
                        }
                        subgrid_set.insert(val);
                    }
                }
            }
        }

        return true;
    }
};
